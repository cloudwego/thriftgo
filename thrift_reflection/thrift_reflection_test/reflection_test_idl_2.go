// Copyright 2024 CloudWeGo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by thriftgo (0.3.15). DO NOT EDIT.

package thrift_reflection_test

import (
	"context"
	"fmt"
)

type MyAnotherService interface {
	M33(ctx context.Context) (r string, err error)

	M44(ctx context.Context) (r string, err error)
}

type MyAnotherServiceM33Args struct {
}

func NewMyAnotherServiceM33Args() *MyAnotherServiceM33Args {
	return &MyAnotherServiceM33Args{}
}

func (p *MyAnotherServiceM33Args) InitDefault() {
}

func (p *MyAnotherServiceM33Args) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MyAnotherServiceM33Args(%+v)", *p)
}

var fieldIDToName_MyAnotherServiceM33Args = map[int16]string{}

type MyAnotherServiceM33Result struct {
	Success *string `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewMyAnotherServiceM33Result() *MyAnotherServiceM33Result {
	return &MyAnotherServiceM33Result{}
}

func (p *MyAnotherServiceM33Result) InitDefault() {
}

var MyAnotherServiceM33Result_Success_DEFAULT string

func (p *MyAnotherServiceM33Result) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return MyAnotherServiceM33Result_Success_DEFAULT
	}
	return *p.Success
}

func (p *MyAnotherServiceM33Result) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *MyAnotherServiceM33Result) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MyAnotherServiceM33Result(%+v)", *p)
}

var fieldIDToName_MyAnotherServiceM33Result = map[int16]string{
	0: "success",
}

type MyAnotherServiceM44Args struct {
}

func NewMyAnotherServiceM44Args() *MyAnotherServiceM44Args {
	return &MyAnotherServiceM44Args{}
}

func (p *MyAnotherServiceM44Args) InitDefault() {
}

func (p *MyAnotherServiceM44Args) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MyAnotherServiceM44Args(%+v)", *p)
}

var fieldIDToName_MyAnotherServiceM44Args = map[int16]string{}

type MyAnotherServiceM44Result struct {
	Success *string `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewMyAnotherServiceM44Result() *MyAnotherServiceM44Result {
	return &MyAnotherServiceM44Result{}
}

func (p *MyAnotherServiceM44Result) InitDefault() {
}

var MyAnotherServiceM44Result_Success_DEFAULT string

func (p *MyAnotherServiceM44Result) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return MyAnotherServiceM44Result_Success_DEFAULT
	}
	return *p.Success
}

func (p *MyAnotherServiceM44Result) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *MyAnotherServiceM44Result) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MyAnotherServiceM44Result(%+v)", *p)
}

var fieldIDToName_MyAnotherServiceM44Result = map[int16]string{
	0: "success",
}
